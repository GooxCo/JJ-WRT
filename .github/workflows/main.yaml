name: Build OpenWRT Images
on:
  workflow_dispatch:
#  schedule:
#    - cron: 0 */18 * * *
jobs:
    build:
        name: Prepare and build OpenWRT images
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Initialization environment
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
          sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
          sudo -E apt-get -y update
          sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
          sudo -E apt-get -y install $(curl -fsSL https://is.gd/depend_ubuntu2204_openwrt)
          sudo -E systemctl daemon-reload
          #sudo -E apt-get -y full-upgrade
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo timedatectl set-timezone "${TZ}"
          echo "status=success" >> ${GITHUB_OUTPUT}
            - name: Build target images
              run: 
                bash build_x86.sh

            - name: TAR output
              run: tar -cvf images.tar images

            - name: Upload artifacts
              uses: actions/upload-artifact@v2
              with:
                name: images
                path: images.tar

    release:
          name: Make a release
          runs-on: ubuntu-latest
          needs: build

          steps:
            - name: Set env for SHA
              run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV

            - name: Download the image artifacts
              uses: actions/download-artifact@v2
              with:
                name: images

            - name: Extract the image artifacts
              run: tar xf images.tar

            - name: Get the current date
              run: echo "NOW=$(date +%F)" >> $GITHUB_ENV

            - name: Create a release
              uses: "marvinpinto/action-automatic-releases@latest"
              with:
                repo_token: "${{ secrets.GITHUB_TOKEN }}"
                prerelease: false
                title: "OpenWRT PrivateRouter SHA ${{ env.GITHUB_SHA_SHORT }}"
                automatic_release_tag: "OpenWRT-PrivateRouter-${{ env.GITHUB_SHA_SHORT }}"
                files: images/*
